# Exemple de ligne de commande: python3.9 pos_qsgen_rev4.py -k config.ini  test.conll -o sortie.txt


[PARAMS]
# Nombre de choix maxmimum
# Max number of possible answers
maxchoix=2

# déclaration des parties du discours on souhaite cibler
# POS-tags declaration
filtre=V PRO ADV ADJ ADV_Int Adj_Excl/Int Conj_de_Coord Conj_de_Sub DET_Int PREP_+_DET PREP_+_PRO PRO_Rel PRO_Int V_Inf V_Part_Passé PRO_Suj PRO_Ob



# Modèle de la question
# Question template
questionTemplate = ":: Parties du Discours ::[markdown]   Donner la partie du discours du mot **{}** dans la phrase:"

#Filtre optionnel sur le suffixe de la forme fléchie d'un mot
# Otional filter 
suffixeFilter="ment"
# si le filtre sur le suffixe est défini, alors cette option permet de l'appliquer sur la forme lemmatisée.
# once a filter is set, it can be applied to match lemmas (eg.: nouns bearing suffix -ment)
lemmeSuffixe=true

# Choix du champ CoNNLU (upos par defaut)
# selecting the appropriate CONLL field (upos by default)
conlluField=upos

# Définition d'un catégorie Moodle cible (préexistante)
# Defining a Moodle question bank subcategory (this needs to be performed before quiz generation)
moodleCategory=Essai

# Définition de la table de normalisation du jeu d'étiquettes des parties du discours. Ceci permet d'afficher des étiquettes avec lesquelles les étudiants sont familiers.
# defining a POS-tag equivalence table; beginners are not familiar with UD POS-tags, more advanced users can be exposed to the actual upos tagset
table=ADJ:ADJ
	ADJWH:ADJ_Excl/Int
	ADV:ADV
	ADVWH:ADV_Int
	CC:Conj_de_Coord
	CLO:PRO_Obj
	CLR:PRO_Réfl
	CLS:PRO_Suj
	CS:Conj_de_Sub
	DET:DET
	DETWH:DET_Int
	ET:Mot_étranger
	I:Interj
	NC:NC
	NPP:NPr
	P:PREP
	P+D:PREP_+_DET
	P+PRO:PREP_+_PRO
	PREF:Préf
	PRO:PRO
	PROREL:PRO_Rel
	PROWH:PRO_Int
	V:V
	VIMP:V_Imp
	VINF:V_Inf
	VPP:V_Part_Passé
	VPR:V_Part_Prés
	VS:V_Subj
	PONCT:PONCT



